ARM GAS  /tmp/ccydkvW2.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB43:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include <stdint.h>
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccydkvW2.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** UART_HandleTypeDef huart2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** const uint32_t LD2_TOGGLE_DELAY = 500;
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  54:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /**
  64:Core/Src/main.c ****  * @brief  The application entry point.
  65:Core/Src/main.c ****  * @retval int
  66:Core/Src/main.c ****  */
  67:Core/Src/main.c **** int main(void) {
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* USER CODE END 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick.
  76:Core/Src/main.c ****    */
  77:Core/Src/main.c ****   HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/ccydkvW2.s 			page 3


  91:Core/Src/main.c ****   MX_GPIO_Init();
  92:Core/Src/main.c ****   MX_USART2_UART_Init();
  93:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END 2 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Infinite loop */
  98:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  99:Core/Src/main.c ****   while (1) {
 100:Core/Src/main.c ****     /* USER CODE END WHILE */
 101:Core/Src/main.c ****     HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_SET);
 102:Core/Src/main.c ****     HAL_Delay(LD2_TOGGLE_DELAY);
 103:Core/Src/main.c ****     HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 104:Core/Src/main.c ****     HAL_Delay(LD2_TOGGLE_DELAY);
 105:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 106:Core/Src/main.c ****   }
 107:Core/Src/main.c ****   /* USER CODE END 3 */
 108:Core/Src/main.c **** }
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /**
 111:Core/Src/main.c ****  * @brief System Clock Configuration
 112:Core/Src/main.c ****  * @retval None
 113:Core/Src/main.c ****  */
 114:Core/Src/main.c **** void SystemClock_Config(void) {
 115:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 119:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 120:Core/Src/main.c ****    */
 121:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 128:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 129:Core/Src/main.c ****     Error_Handler();
 130:Core/Src/main.c ****   }
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 133:Core/Src/main.c ****    */
 134:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType =
 135:Core/Src/main.c ****       RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 136:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 137:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 138:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK) {
 141:Core/Src/main.c ****     Error_Handler();
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c **** }
 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** /**
 146:Core/Src/main.c ****  * @brief USART2 Initialization Function
 147:Core/Src/main.c ****  * @param None
ARM GAS  /tmp/ccydkvW2.s 			page 4


 148:Core/Src/main.c ****  * @retval None
 149:Core/Src/main.c ****  */
 150:Core/Src/main.c **** static void MX_USART2_UART_Init(void) {
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 159:Core/Src/main.c ****   huart2.Instance = USART2;
 160:Core/Src/main.c ****   huart2.Init.BaudRate = 38400;
 161:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 162:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 163:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 164:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 165:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 166:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 167:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 168:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 169:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK) {
 170:Core/Src/main.c ****     Error_Handler();
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 175:Core/Src/main.c **** }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /**
 178:Core/Src/main.c ****  * @brief GPIO Initialization Function
 179:Core/Src/main.c ****  * @param None
 180:Core/Src/main.c ****  * @retval None
 181:Core/Src/main.c ****  */
 182:Core/Src/main.c **** static void MX_GPIO_Init(void) {
  26              		.loc 1 182 32 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37 0002 88B0     		sub	sp, sp, #32
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 183:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 183 3 view .LVU1
  41              		.loc 1 183 20 is_stmt 0 view .LVU2
  42 0004 03AC     		add	r4, sp, #12
  43 0006 1422     		movs	r2, #20
  44 0008 0021     		movs	r1, #0
  45 000a 2000     		movs	r0, r4
  46 000c FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccydkvW2.s 			page 5


  47              	.LVL0:
 184:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 185:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 188:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  48              		.loc 1 188 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 188 3 view .LVU4
  51              		.loc 1 188 3 view .LVU5
  52 0010 1D4B     		ldr	r3, .L2
  53 0012 5A69     		ldr	r2, [r3, #20]
  54 0014 8021     		movs	r1, #128
  55 0016 0903     		lsls	r1, r1, #12
  56 0018 0A43     		orrs	r2, r1
  57 001a 5A61     		str	r2, [r3, #20]
  58              		.loc 1 188 3 view .LVU6
  59 001c 5A69     		ldr	r2, [r3, #20]
  60 001e 0A40     		ands	r2, r1
  61 0020 0092     		str	r2, [sp]
  62              		.loc 1 188 3 view .LVU7
  63 0022 009A     		ldr	r2, [sp]
  64              	.LBE4:
  65              		.loc 1 188 3 view .LVU8
 189:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  66              		.loc 1 189 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 189 3 view .LVU10
  69              		.loc 1 189 3 view .LVU11
  70 0024 5A69     		ldr	r2, [r3, #20]
  71 0026 8021     		movs	r1, #128
  72 0028 C903     		lsls	r1, r1, #15
  73 002a 0A43     		orrs	r2, r1
  74 002c 5A61     		str	r2, [r3, #20]
  75              		.loc 1 189 3 view .LVU12
  76 002e 5A69     		ldr	r2, [r3, #20]
  77 0030 0A40     		ands	r2, r1
  78 0032 0192     		str	r2, [sp, #4]
  79              		.loc 1 189 3 view .LVU13
  80 0034 019A     		ldr	r2, [sp, #4]
  81              	.LBE5:
  82              		.loc 1 189 3 view .LVU14
 190:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  83              		.loc 1 190 3 view .LVU15
  84              	.LBB6:
  85              		.loc 1 190 3 view .LVU16
  86              		.loc 1 190 3 view .LVU17
  87 0036 5A69     		ldr	r2, [r3, #20]
  88 0038 8021     		movs	r1, #128
  89 003a 8902     		lsls	r1, r1, #10
  90 003c 0A43     		orrs	r2, r1
  91 003e 5A61     		str	r2, [r3, #20]
  92              		.loc 1 190 3 view .LVU18
  93 0040 5B69     		ldr	r3, [r3, #20]
  94 0042 0B40     		ands	r3, r1
  95 0044 0293     		str	r3, [sp, #8]
  96              		.loc 1 190 3 view .LVU19
ARM GAS  /tmp/ccydkvW2.s 			page 6


  97 0046 029B     		ldr	r3, [sp, #8]
  98              	.LBE6:
  99              		.loc 1 190 3 view .LVU20
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 193:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 100              		.loc 1 193 3 view .LVU21
 101 0048 9026     		movs	r6, #144
 102 004a F605     		lsls	r6, r6, #23
 103 004c 0022     		movs	r2, #0
 104 004e 2021     		movs	r1, #32
 105 0050 3000     		movs	r0, r6
 106 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 107              	.LVL1:
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 196:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 108              		.loc 1 196 3 view .LVU22
 109              		.loc 1 196 23 is_stmt 0 view .LVU23
 110 0056 8023     		movs	r3, #128
 111 0058 9B01     		lsls	r3, r3, #6
 112 005a 0393     		str	r3, [sp, #12]
 197:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 113              		.loc 1 197 3 is_stmt 1 view .LVU24
 114              		.loc 1 197 24 is_stmt 0 view .LVU25
 115 005c 8423     		movs	r3, #132
 116 005e 9B03     		lsls	r3, r3, #14
 117 0060 0493     		str	r3, [sp, #16]
 198:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 118              		.loc 1 198 3 is_stmt 1 view .LVU26
 119              		.loc 1 198 24 is_stmt 0 view .LVU27
 120 0062 0025     		movs	r5, #0
 121 0064 0595     		str	r5, [sp, #20]
 199:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 122              		.loc 1 199 3 is_stmt 1 view .LVU28
 123 0066 2100     		movs	r1, r4
 124 0068 0848     		ldr	r0, .L2+4
 125 006a FFF7FEFF 		bl	HAL_GPIO_Init
 126              	.LVL2:
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 202:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 127              		.loc 1 202 3 view .LVU29
 128              		.loc 1 202 23 is_stmt 0 view .LVU30
 129 006e 2023     		movs	r3, #32
 130 0070 0393     		str	r3, [sp, #12]
 203:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 131              		.loc 1 203 3 is_stmt 1 view .LVU31
 132              		.loc 1 203 24 is_stmt 0 view .LVU32
 133 0072 1F3B     		subs	r3, r3, #31
 134 0074 0493     		str	r3, [sp, #16]
 204:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 135              		.loc 1 204 3 is_stmt 1 view .LVU33
 136              		.loc 1 204 24 is_stmt 0 view .LVU34
 137 0076 0595     		str	r5, [sp, #20]
 205:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 138              		.loc 1 205 3 is_stmt 1 view .LVU35
ARM GAS  /tmp/ccydkvW2.s 			page 7


 139              		.loc 1 205 25 is_stmt 0 view .LVU36
 140 0078 0695     		str	r5, [sp, #24]
 206:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 141              		.loc 1 206 3 is_stmt 1 view .LVU37
 142 007a 2100     		movs	r1, r4
 143 007c 3000     		movs	r0, r6
 144 007e FFF7FEFF 		bl	HAL_GPIO_Init
 145              	.LVL3:
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 209:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 210:Core/Src/main.c **** }
 146              		.loc 1 210 1 is_stmt 0 view .LVU38
 147 0082 08B0     		add	sp, sp, #32
 148              		@ sp needed
 149 0084 70BD     		pop	{r4, r5, r6, pc}
 150              	.L3:
 151 0086 C046     		.align	2
 152              	.L2:
 153 0088 00100240 		.word	1073876992
 154 008c 00080048 		.word	1207961600
 155              		.cfi_endproc
 156              	.LFE43:
 158              		.section	.text.Error_Handler,"ax",%progbits
 159              		.align	1
 160              		.global	Error_Handler
 161              		.syntax unified
 162              		.code	16
 163              		.thumb_func
 165              	Error_Handler:
 166              	.LFB44:
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 213:Core/Src/main.c **** 
 214:Core/Src/main.c **** /* USER CODE END 4 */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c **** /**
 217:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 218:Core/Src/main.c ****  * @retval None
 219:Core/Src/main.c ****  */
 220:Core/Src/main.c **** void Error_Handler(void) {
 167              		.loc 1 220 26 is_stmt 1 view -0
 168              		.cfi_startproc
 169              		@ Volatile: function does not return.
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 221:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 222:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 223:Core/Src/main.c ****   __disable_irq();
 173              		.loc 1 223 3 view .LVU40
 174              	.LBB7:
 175              	.LBI7:
 176              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
ARM GAS  /tmp/ccydkvW2.s 			page 8


   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccydkvW2.s 			page 9


  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccydkvW2.s 			page 10


 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 177              		.loc 2 140 27 view .LVU41
 178              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 179              		.loc 2 142 3 view .LVU42
 180              		.syntax divided
 181              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 182 0000 72B6     		cpsid i
 183              	@ 0 "" 2
 184              		.thumb
 185              		.syntax unified
 186              	.L5:
 187              	.LBE8:
 188              	.LBE7:
 224:Core/Src/main.c ****   while (1) {
 189              		.loc 1 224 3 view .LVU43
 225:Core/Src/main.c ****   }
 190              		.loc 1 225 3 view .LVU44
 224:Core/Src/main.c ****   while (1) {
 191              		.loc 1 224 9 view .LVU45
 192 0002 FEE7     		b	.L5
 193              		.cfi_endproc
 194              	.LFE44:
 196              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 197              		.align	1
 198              		.syntax unified
 199              		.code	16
 200              		.thumb_func
 202              	MX_USART2_UART_Init:
 203              	.LFB42:
 150:Core/Src/main.c **** 
 204              		.loc 1 150 39 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccydkvW2.s 			page 11


 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208 0000 10B5     		push	{r4, lr}
 209              	.LCFI2:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 4, -8
 212              		.cfi_offset 14, -4
 159:Core/Src/main.c ****   huart2.Init.BaudRate = 38400;
 213              		.loc 1 159 3 view .LVU47
 159:Core/Src/main.c ****   huart2.Init.BaudRate = 38400;
 214              		.loc 1 159 19 is_stmt 0 view .LVU48
 215 0002 0B48     		ldr	r0, .L9
 216 0004 0B4B     		ldr	r3, .L9+4
 217 0006 0360     		str	r3, [r0]
 160:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 218              		.loc 1 160 3 is_stmt 1 view .LVU49
 160:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 219              		.loc 1 160 24 is_stmt 0 view .LVU50
 220 0008 9623     		movs	r3, #150
 221 000a 1B02     		lsls	r3, r3, #8
 222 000c 4360     		str	r3, [r0, #4]
 161:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 223              		.loc 1 161 3 is_stmt 1 view .LVU51
 161:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 224              		.loc 1 161 26 is_stmt 0 view .LVU52
 225 000e 0023     		movs	r3, #0
 226 0010 8360     		str	r3, [r0, #8]
 162:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 227              		.loc 1 162 3 is_stmt 1 view .LVU53
 162:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 228              		.loc 1 162 24 is_stmt 0 view .LVU54
 229 0012 C360     		str	r3, [r0, #12]
 163:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 230              		.loc 1 163 3 is_stmt 1 view .LVU55
 163:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 231              		.loc 1 163 22 is_stmt 0 view .LVU56
 232 0014 0361     		str	r3, [r0, #16]
 164:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 233              		.loc 1 164 3 is_stmt 1 view .LVU57
 164:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 234              		.loc 1 164 20 is_stmt 0 view .LVU58
 235 0016 0C22     		movs	r2, #12
 236 0018 4261     		str	r2, [r0, #20]
 165:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 237              		.loc 1 165 3 is_stmt 1 view .LVU59
 165:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 238              		.loc 1 165 25 is_stmt 0 view .LVU60
 239 001a 8361     		str	r3, [r0, #24]
 166:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 240              		.loc 1 166 3 is_stmt 1 view .LVU61
 166:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 241              		.loc 1 166 28 is_stmt 0 view .LVU62
 242 001c C361     		str	r3, [r0, #28]
 167:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 243              		.loc 1 167 3 is_stmt 1 view .LVU63
 167:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 244              		.loc 1 167 30 is_stmt 0 view .LVU64
 245 001e 0362     		str	r3, [r0, #32]
ARM GAS  /tmp/ccydkvW2.s 			page 12


 168:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK) {
 246              		.loc 1 168 3 is_stmt 1 view .LVU65
 168:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK) {
 247              		.loc 1 168 38 is_stmt 0 view .LVU66
 248 0020 4362     		str	r3, [r0, #36]
 169:Core/Src/main.c ****     Error_Handler();
 249              		.loc 1 169 3 is_stmt 1 view .LVU67
 169:Core/Src/main.c ****     Error_Handler();
 250              		.loc 1 169 7 is_stmt 0 view .LVU68
 251 0022 FFF7FEFF 		bl	HAL_UART_Init
 252              	.LVL4:
 169:Core/Src/main.c ****     Error_Handler();
 253              		.loc 1 169 6 discriminator 1 view .LVU69
 254 0026 0028     		cmp	r0, #0
 255 0028 00D1     		bne	.L8
 175:Core/Src/main.c **** 
 256              		.loc 1 175 1 view .LVU70
 257              		@ sp needed
 258 002a 10BD     		pop	{r4, pc}
 259              	.L8:
 170:Core/Src/main.c ****   }
 260              		.loc 1 170 5 is_stmt 1 view .LVU71
 261 002c FFF7FEFF 		bl	Error_Handler
 262              	.LVL5:
 263              	.L10:
 264              		.align	2
 265              	.L9:
 266 0030 00000000 		.word	huart2
 267 0034 00440040 		.word	1073759232
 268              		.cfi_endproc
 269              	.LFE42:
 271              		.section	.text.SystemClock_Config,"ax",%progbits
 272              		.align	1
 273              		.global	SystemClock_Config
 274              		.syntax unified
 275              		.code	16
 276              		.thumb_func
 278              	SystemClock_Config:
 279              	.LFB41:
 114:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 280              		.loc 1 114 31 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 64
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284 0000 10B5     		push	{r4, lr}
 285              	.LCFI3:
 286              		.cfi_def_cfa_offset 8
 287              		.cfi_offset 4, -8
 288              		.cfi_offset 14, -4
 289 0002 90B0     		sub	sp, sp, #64
 290              	.LCFI4:
 291              		.cfi_def_cfa_offset 72
 115:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 292              		.loc 1 115 3 view .LVU73
 115:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 293              		.loc 1 115 22 is_stmt 0 view .LVU74
 294 0004 04AC     		add	r4, sp, #16
ARM GAS  /tmp/ccydkvW2.s 			page 13


 295 0006 3022     		movs	r2, #48
 296 0008 0021     		movs	r1, #0
 297 000a 2000     		movs	r0, r4
 298 000c FFF7FEFF 		bl	memset
 299              	.LVL6:
 116:Core/Src/main.c **** 
 300              		.loc 1 116 3 is_stmt 1 view .LVU75
 116:Core/Src/main.c **** 
 301              		.loc 1 116 22 is_stmt 0 view .LVU76
 302 0010 1022     		movs	r2, #16
 303 0012 0021     		movs	r1, #0
 304 0014 6846     		mov	r0, sp
 305 0016 FFF7FEFF 		bl	memset
 306              	.LVL7:
 121:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 307              		.loc 1 121 3 is_stmt 1 view .LVU77
 121:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 308              		.loc 1 121 36 is_stmt 0 view .LVU78
 309 001a 0223     		movs	r3, #2
 310 001c 0493     		str	r3, [sp, #16]
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 311              		.loc 1 122 3 is_stmt 1 view .LVU79
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 312              		.loc 1 122 30 is_stmt 0 view .LVU80
 313 001e 0122     		movs	r2, #1
 314 0020 0792     		str	r2, [sp, #28]
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 315              		.loc 1 123 3 is_stmt 1 view .LVU81
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 316              		.loc 1 123 41 is_stmt 0 view .LVU82
 317 0022 0F32     		adds	r2, r2, #15
 318 0024 0892     		str	r2, [sp, #32]
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 319              		.loc 1 124 3 is_stmt 1 view .LVU83
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 320              		.loc 1 124 34 is_stmt 0 view .LVU84
 321 0026 0C93     		str	r3, [sp, #48]
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 322              		.loc 1 125 3 is_stmt 1 view .LVU85
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 323              		.loc 1 126 3 view .LVU86
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 324              		.loc 1 126 32 is_stmt 0 view .LVU87
 325 0028 A023     		movs	r3, #160
 326 002a 9B03     		lsls	r3, r3, #14
 327 002c 0E93     		str	r3, [sp, #56]
 127:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 328              		.loc 1 127 3 is_stmt 1 view .LVU88
 128:Core/Src/main.c ****     Error_Handler();
 329              		.loc 1 128 3 view .LVU89
 128:Core/Src/main.c ****     Error_Handler();
 330              		.loc 1 128 7 is_stmt 0 view .LVU90
 331 002e 2000     		movs	r0, r4
 332 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 333              	.LVL8:
 128:Core/Src/main.c ****     Error_Handler();
 334              		.loc 1 128 6 discriminator 1 view .LVU91
ARM GAS  /tmp/ccydkvW2.s 			page 14


 335 0034 0028     		cmp	r0, #0
 336 0036 0ED1     		bne	.L14
 134:Core/Src/main.c ****       RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 337              		.loc 1 134 3 is_stmt 1 view .LVU92
 134:Core/Src/main.c ****       RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 338              		.loc 1 134 31 is_stmt 0 view .LVU93
 339 0038 6846     		mov	r0, sp
 340 003a 0723     		movs	r3, #7
 341 003c 0093     		str	r3, [sp]
 136:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 342              		.loc 1 136 3 is_stmt 1 view .LVU94
 136:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 343              		.loc 1 136 34 is_stmt 0 view .LVU95
 344 003e 053B     		subs	r3, r3, #5
 345 0040 0193     		str	r3, [sp, #4]
 137:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 346              		.loc 1 137 3 is_stmt 1 view .LVU96
 137:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 347              		.loc 1 137 35 is_stmt 0 view .LVU97
 348 0042 0023     		movs	r3, #0
 349 0044 0293     		str	r3, [sp, #8]
 138:Core/Src/main.c **** 
 350              		.loc 1 138 3 is_stmt 1 view .LVU98
 138:Core/Src/main.c **** 
 351              		.loc 1 138 36 is_stmt 0 view .LVU99
 352 0046 0393     		str	r3, [sp, #12]
 140:Core/Src/main.c ****     Error_Handler();
 353              		.loc 1 140 3 is_stmt 1 view .LVU100
 140:Core/Src/main.c ****     Error_Handler();
 354              		.loc 1 140 7 is_stmt 0 view .LVU101
 355 0048 0121     		movs	r1, #1
 356 004a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 357              	.LVL9:
 140:Core/Src/main.c ****     Error_Handler();
 358              		.loc 1 140 6 discriminator 1 view .LVU102
 359 004e 0028     		cmp	r0, #0
 360 0050 03D1     		bne	.L15
 143:Core/Src/main.c **** 
 361              		.loc 1 143 1 view .LVU103
 362 0052 10B0     		add	sp, sp, #64
 363              		@ sp needed
 364 0054 10BD     		pop	{r4, pc}
 365              	.L14:
 129:Core/Src/main.c ****   }
 366              		.loc 1 129 5 is_stmt 1 view .LVU104
 367 0056 FFF7FEFF 		bl	Error_Handler
 368              	.LVL10:
 369              	.L15:
 141:Core/Src/main.c ****   }
 370              		.loc 1 141 5 view .LVU105
 371 005a FFF7FEFF 		bl	Error_Handler
 372              	.LVL11:
 373              		.cfi_endproc
 374              	.LFE41:
 376              		.section	.text.main,"ax",%progbits
 377              		.align	1
 378              		.global	main
ARM GAS  /tmp/ccydkvW2.s 			page 15


 379              		.syntax unified
 380              		.code	16
 381              		.thumb_func
 383              	main:
 384              	.LFB40:
  67:Core/Src/main.c **** 
 385              		.loc 1 67 16 view -0
 386              		.cfi_startproc
 387              		@ Volatile: function does not return.
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390 0000 70B5     		push	{r4, r5, r6, lr}
 391              	.LCFI5:
 392              		.cfi_def_cfa_offset 16
 393              		.cfi_offset 4, -16
 394              		.cfi_offset 5, -12
 395              		.cfi_offset 6, -8
 396              		.cfi_offset 14, -4
  77:Core/Src/main.c **** 
 397              		.loc 1 77 3 view .LVU107
 398 0002 FFF7FEFF 		bl	HAL_Init
 399              	.LVL12:
  84:Core/Src/main.c **** 
 400              		.loc 1 84 3 view .LVU108
 401 0006 FFF7FEFF 		bl	SystemClock_Config
 402              	.LVL13:
  91:Core/Src/main.c ****   MX_USART2_UART_Init();
 403              		.loc 1 91 3 view .LVU109
 404 000a FFF7FEFF 		bl	MX_GPIO_Init
 405              	.LVL14:
  92:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 406              		.loc 1 92 3 view .LVU110
 407 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 408              	.LVL15:
 409              	.L17:
  99:Core/Src/main.c ****     /* USER CODE END WHILE */
 410              		.loc 1 99 3 view .LVU111
 101:Core/Src/main.c ****     HAL_Delay(LD2_TOGGLE_DELAY);
 411              		.loc 1 101 5 view .LVU112
 412 0012 9025     		movs	r5, #144
 413 0014 ED05     		lsls	r5, r5, #23
 414 0016 0122     		movs	r2, #1
 415 0018 2021     		movs	r1, #32
 416 001a 2800     		movs	r0, r5
 417 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 418              	.LVL16:
 102:Core/Src/main.c ****     HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 419              		.loc 1 102 5 view .LVU113
 420 0020 FA24     		movs	r4, #250
 421 0022 6400     		lsls	r4, r4, #1
 422 0024 2000     		movs	r0, r4
 423 0026 FFF7FEFF 		bl	HAL_Delay
 424              	.LVL17:
 103:Core/Src/main.c ****     HAL_Delay(LD2_TOGGLE_DELAY);
 425              		.loc 1 103 5 view .LVU114
 426 002a 0022     		movs	r2, #0
 427 002c 2021     		movs	r1, #32
ARM GAS  /tmp/ccydkvW2.s 			page 16


 428 002e 2800     		movs	r0, r5
 429 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 430              	.LVL18:
 104:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 431              		.loc 1 104 5 discriminator 1 view .LVU115
 432 0034 2000     		movs	r0, r4
 433 0036 FFF7FEFF 		bl	HAL_Delay
 434              	.LVL19:
  99:Core/Src/main.c ****     /* USER CODE END WHILE */
 435              		.loc 1 99 9 view .LVU116
 436 003a EAE7     		b	.L17
 437              		.cfi_endproc
 438              	.LFE40:
 440              		.global	LD2_TOGGLE_DELAY
 441              		.section	.rodata.LD2_TOGGLE_DELAY,"a"
 442              		.align	2
 445              	LD2_TOGGLE_DELAY:
 446 0000 F4010000 		.word	500
 447              		.global	huart2
 448              		.section	.bss.huart2,"aw",%nobits
 449              		.align	2
 452              	huart2:
 453 0000 00000000 		.space	136
 453      00000000 
 453      00000000 
 453      00000000 
 453      00000000 
 454              		.text
 455              	.Letext0:
 456              		.file 3 "/usr/lib/gcc/arm-none-eabi/14.2.1/include/stdint.h"
 457              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
 458              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 459              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 460              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 461              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 462              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 463              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 464              		.file 11 "<built-in>"
ARM GAS  /tmp/ccydkvW2.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccydkvW2.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccydkvW2.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccydkvW2.s:153    .text.MX_GPIO_Init:00000088 $d
     /tmp/ccydkvW2.s:159    .text.Error_Handler:00000000 $t
     /tmp/ccydkvW2.s:165    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccydkvW2.s:197    .text.MX_USART2_UART_Init:00000000 $t
     /tmp/ccydkvW2.s:202    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/ccydkvW2.s:266    .text.MX_USART2_UART_Init:00000030 $d
     /tmp/ccydkvW2.s:452    .bss.huart2:00000000 huart2
     /tmp/ccydkvW2.s:272    .text.SystemClock_Config:00000000 $t
     /tmp/ccydkvW2.s:278    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccydkvW2.s:377    .text.main:00000000 $t
     /tmp/ccydkvW2.s:383    .text.main:00000000 main
     /tmp/ccydkvW2.s:445    .rodata.LD2_TOGGLE_DELAY:00000000 LD2_TOGGLE_DELAY
     /tmp/ccydkvW2.s:442    .rodata.LD2_TOGGLE_DELAY:00000000 $d
     /tmp/ccydkvW2.s:449    .bss.huart2:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
